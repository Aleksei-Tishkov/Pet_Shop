# Generated by Django 4.2.6 on 2024-02-21 11:58

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models


def compute_search_vector(apps, schema_editor):
    post = apps.get_model("Blog", "Post")
    post.objects.update(search_vector=django.contrib.postgres.search.SearchVector('title', 'content', 'summary'))


class Migration(migrations.Migration):

    dependencies = [
        ('Blog', '0004_alter_post_content'),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='post',
            name='Blog_post_time_cr_113ab4_idx',
        ),
        migrations.AddField(
            model_name='post',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='summary',
            field=models.TextField(db_index=True, max_length=256),
        ),
        migrations.AddIndex(
            model_name='post',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='Blog_post_search__47a33e_gin'),
        ),
        migrations.RunPython(
            compute_search_vector, reverse_code=migrations.RunPython.noop
        ),
    ]
